{"configuration": {"Peer": ["p1", "p"], "Tracker": ["TP03speakptt", "TP03listenptt", "t"]}, "constraints": [["p_is_registered_to_TP03speakptt", {"is_registered_to": ["p", "TP03speakptt"]}], ["p1_is_registered_to_TP03speakptt", {"is_registered_to": ["p1", "TP03speakptt"]}], ["p1_is_different_with_p", {"is_different_with": ["p1", "p"]}], ["p_is_registered_to_TP03listenptt", {"is_registered_to": ["p", "TP03listenptt"]}], ["p1_is_registered_to_TP03listenptt", {"is_registered_to": ["p1", "TP03listenptt"]}], ["p1_is_different_with_p", {"is_different_with": ["p1", "p"]}]], "actions": [["t_log", {"log": ["t"]}], ["p_register", {"register": ["p"]}], ["t_log", {"log": ["t"]}], ["p_unregister", {"unregister": ["p"]}], ["~p_register", {"register": ["p"]}], ["~p_unregister", {"unregister": ["p"]}], ["TP03speakptt_broadcast", {"broadcast": ["TP03speakptt"]}], ["p_speak", {"speak": ["p"]}], ["~p1_speak", {"speak": ["p1"]}], ["~p_speak", {"speak": ["p"]}], ["~p_listen", {"listen": ["p"]}], ["TP03listenptt_broadcast", {"broadcast": ["TP03listenptt"]}], ["p_listen", {"listen": ["p"]}], ["p1_listen", {"listen": ["p1"]}]], "boolean_functions": ["In Peer.java:\n\t@Guard(name=\"is_different_with\")\n\tpublic boolean is_different_with(Peer Peer_ins) {}", "In Peer.java:\n\t@Guard(name=\"is_registered_to\")\n\tpublic boolean is_registered_to(@Data(name=\"Tracker2Peer_data\") Tracker Tracker_ins) {}", "In Peer.java:\n\t@Guard(name=\"is_different_with\")\n\tpublic boolean is_different_with(Peer Peer_ins) {}", "In Peer.java:\n\t@Guard(name=\"is_registered_to\")\n\tpublic boolean is_registered_to(@Data(name=\"Tracker2Peer_data\") Tracker Tracker_ins) {}"], "data_transfer": ["data(Tracker.class,\"Tracker2Peer_data\").to(Peer.class,\"Tracker2Peer_data\");", "data(Tracker.class,\"Tracker2Peer_data\").to(Peer.class,\"Tracker2Peer_data\");"], "pbl_formulas": "TP_04_1 = t_log <=> p_register\nTP_04_3 = t_log <=> p_unregister\nTP_04_2 = (~p_register | ~p_unregister )\nTP_03_speak = ((p_speak => (p1_is_registered_to_TP03speakptt & p1_is_different_with_p & ~p1_speak & p_is_registered_to_TP03speakptt & TP03speakptt_broadcast)))\nTP_03_mutex = (~p_speak | ~p_listen )\nTP_03_listen = ((p_listen => (p_is_registered_to_TP03listenptt & TP03listenptt_broadcast))) & ((p1_listen => (p1_is_registered_to_TP03listenptt & p1_is_different_with_p & p_is_registered_to_TP03listenptt & TP03listenptt_broadcast)))\nMain_Exp: TP_04 & TP_03"}